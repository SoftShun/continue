{
  "name": "axcode-code-assistant",
  "icon": "media/icon.png",
  "author": "AXCODE",
  "version": "1.0.6",
  "repository": {
    "type": "git",
    "url": "https://github.com/SKAX/skax-code-assistant"
  },
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "bugs": {
    "url": "https://github.com/SKAX/skax-code-assistant/issues",
    "email": "support@axcode.dev"
  },
  "homepage": "https://axcode.dev",
  "qna": "https://github.com/SKAX/skax-code-assistant/discussions",
  "license": "Apache-2.0",
  "displayName": "AXCODE - AI code assistant",
  "pricing": "Free",
  "description": "AXCODE AI code assistant",
  "publisher": "AxcodeDev",
  "engines": {
    "vscode": "^1.70.0",
    "node": ">=20.19.0"
  },
  "engine-strict": true,
  "galleryBanner": {
    "color": "#1E1E1E",
    "theme": "dark"
  },
  "categories": [
    "AI",
    "Chat",
    "Programming Languages",
    "Education",
    "Machine Learning",
    "Snippets"
  ],
  "keywords": [
    "chatgpt",
    "cline",
    "roo",
    "github",
    "copilot",
    "claude",
    "mistral",
    "codestral",
    "ai"
  ],
  "activationEvents": [
    "onUri",
    "onStartupFinished",
    "onView:axcodeGUIView"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "filenames": [
          "config.json",
          ".skaxrc.json"
        ],
        "id": "jsonc"
      },
      {
        "id": "promptLanguage",
        "extensions": [
          ".prompt"
        ],
        "aliases": [
          "Prompt Language"
        ],
        "configuration": "./prompt-file-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "promptLanguage",
        "scopeName": "source.prompt",
        "path": "./media/prompt.tmLanguage.json"
      }
    ],
    "configuration": {
      "title": "axcode",
      "properties": {
        "axcode.telemetryEnabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "AXCODE collects anonymous usage data, cleaned of PII, to help us improve the product for our users."
        },
        "axcode.showInlineTip": {
          "type": "boolean",
          "default": true,
          "description": "Show inline suggestion to use the AXCODE keyboard shortcuts (e.g. \"Cmd/Ctrl L to select code, Cmd/Ctrl I to edit\")."
        },
        "axcode.disableQuickFix": {
          "type": "boolean",
          "default": false,
          "description": "Disable the quick fix feature."
        },
        "axcode.enableQuickActions": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable the experimental Quick Actions feature."
        },
        "axcode.enableTabAutocomplete": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Enable AXCODE's tab autocomplete feature."
        },
        "axcode.pauseTabAutocompleteOnBattery": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Pause AXCODE's tab autocomplete feature when your battery is low."
        },
        "axcode.pauseCodebaseIndexOnStart": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Pause AXCODE's codebase index on start."
        },
        "axcode.enableConsole": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Enable a console to log and explore model inputs and outputs. It can be found in the bottom panel."
        },
        "axcode.remoteConfigServerUrl": {
          "type": "string",
          "default": null,
          "markdownDescription": "If your team is set up to use shared configuration, enter the server URL here and your user token below to enable automatic syncing."
        },
        "axcode.userToken": {
          "type": "string",
          "default": null,
          "markdownDescription": "If your team is set up to use shared configuration, enter your user token here and your server URL above to enable automatic syncing."
        },
        "axcode.remoteConfigSyncPeriod": {
          "type": "number",
          "default": 60,
          "description": "The period of time in minutes between automatic syncs."
        }
      }
    },
    "commands": [
      {
        "command": "axcode.applyCodeFromChat",
        "category": "axcode",
        "title": "Apply code from chat",
        "group": "axcode"
      },
      {
        "command": "axcode.acceptDiff",
        "category": "axcode",
        "title": "Accept Diff",
        "group": "axcode"
      },
      {
        "command": "axcode.rejectDiff",
        "category": "axcode",
        "title": "Reject Diff",
        "group": "axcode",
        "icon": "$(stop)"
      },
      {
        "command": "axcode.acceptVerticalDiffBlock",
        "category": "axcode",
        "title": "Accept Vertical Diff Block",
        "group": "axcode"
      },
      {
        "command": "axcode.rejectVerticalDiffBlock",
        "category": "axcode",
        "title": "Reject Vertical Diff Block",
        "group": "axcode"
      },
      {
        "command": "axcode.focusEdit",
        "category": "axcode",
        "title": "Edit Highlighted Code",
        "group": "axcode"
      },
      {
        "command": "axcode.focusContinueInput",
        "category": "axcode",
        "title": "Add Highlighted Code to Context and Clear Chat",
        "group": "axcode"
      },
      {
        "command": "axcode.focusContinueInputWithoutClear",
        "category": "axcode",
        "title": "Add Highlighted Code to Context",
        "group": "axcode"
      },
      {
        "command": "axcode.debugTerminal",
        "category": "axcode",
        "title": "Debug Terminal",
        "group": "axcode"
      },
      {
        "command": "axcode.exitEditMode",
        "category": "axcode",
        "title": "Exit Edit Mode",
        "group": "axcode"
      },
      {
        "command": "axcode.toggleFullScreen",
        "category": "axcode",
        "title": "Open in new window",
        "icon": "$(link-external)",
        "group": "axcode"
      },
      {
        "command": "axcode.openConfigPage",
        "category": "axcode",
        "title": "Open Settings",
        "icon": "$(gear)",
        "group": "axcode"
      },
      {
        "command": "axcode.toggleTabAutocompleteEnabled",
        "category": "axcode",
        "title": "Toggle Autocomplete Enabled",
        "group": "axcode"
      },
      {
        "command": "axcode.openTabAutocompleteConfigMenu",
        "category": "axcode",
        "title": "Open Autocomplete Config Menu",
        "group": "axcode"
      },
      {
        "command": "axcode.forceAutocomplete",
        "title": "axcode: Force Autocomplete",
        "category": "axcode"
      },
      {
        "command": "axcode.selectFilesAsContext",
        "category": "axcode",
        "title": "Select Files as Context",
        "group": "axcode"
      },
      {
        "command": "axcode.newSession",
        "category": "axcode",
        "title": "New Session",
        "icon": "$(add)",
        "group": "axcode"
      },
      {
        "command": "axcode.viewHistory",
        "category": "axcode",
        "title": "View History",
        "icon": "$(history)",
        "group": "axcode"
      },
      {
        "command": "axcode.viewLogs",
        "category": "axcode",
        "title": "View History",
        "group": "axcode"
      },
      {
        "command": "axcode.clearConsole",
        "category": "axcode",
        "title": "Clear Console",
        "icon": "$(clear-all)",
        "group": "axcode"
      },
      {
        "command": "axcode.navigateTo",
        "category": "axcode",
        "title": "Navigate to a path",
        "group": "axcode"
      },
      {
        "command": "axcode.writeCommentsForCode",
        "category": "axcode",
        "title": "Write Comments for this Code",
        "group": "axcode"
      },
      {
        "command": "axcode.writeDocstringForCode",
        "category": "axcode",
        "title": "Write a Docstring for this Code",
        "group": "axcode"
      },
      {
        "command": "axcode.fixCode",
        "category": "axcode",
        "title": "Fix this Code",
        "group": "axcode"
      },
      {
        "command": "axcode.optimizeCode",
        "category": "axcode",
        "title": "Optimize this Code",
        "group": "axcode"
      },
      {
        "command": "axcode.fixGrammar",
        "category": "axcode",
        "title": "Fix Grammar / Spelling",
        "group": "axcode"
      },
      {
        "command": "axcode.codebaseForceReIndex",
        "category": "axcode",
        "title": "Codebase Force Re-Index",
        "group": "axcode"
      },
      {
        "command": "axcode.rebuildCodebaseIndex",
        "category": "axcode",
        "title": "Rebuild codebase index",
        "group": "axcode"
      },
      {
        "command": "axcode.docsIndex",
        "category": "axcode",
        "title": "Docs Index",
        "group": "axcode"
      },
      {
        "command": "axcode.docsReIndex",
        "category": "axcode",
        "title": "Docs Force Re-Index",
        "group": "axcode"
      },
      {
        "command": "axcode.focusContinueInput",
        "category": "axcode",
        "title": "Focus axcode Chat",
        "group": "axcode"
      },
      {
        "command": "axcode.enterEnterpriseLicenseKey",
        "category": "axcode",
        "title": "Enter Enterprise License Key",
        "group": "axcode"
      },
      {
        "command": "axcode.nextEditWindow.hideNextEditSuggestion",
        "category": "axcode",
        "title": "Hide Next Edit Suggestion"
      },
      {
        "command": "axcode.nextEditWindow.acceptNextEditSuggestion",
        "category": "axcode",
        "title": "Accept Next Edit Suggestion"
      },
      {
        "command": "axcode.forceNextEdit",
        "category": "axcode",
        "title": "axcode: Force Next Edit"
      },
      {
        "command": "axcode.acceptJump",
        "category": "axcode",
        "title": "axcode: Accept Jump Suggestion"
      },
      {
        "command": "axcode.rejectJump",
        "category": "axcode",
        "title": "axcode: Reject Jump Suggestion"
      },
      {
        "command": "axcode.generateRule",
        "category": "axcode",
        "title": "Generate Rule",
        "group": "axcode"
      }
    ],
    "keybindings": [
      {
        "command": "axcode.focusContinueInput",
        "mac": "cmd+l",
        "key": "ctrl+l"
      },
      {
        "command": "axcode.focusContinueInputWithoutClear",
        "mac": "cmd+shift+l",
        "key": "ctrl+shift+l"
      },
      {
        "command": "axcode.acceptDiff",
        "mac": "shift+cmd+enter",
        "key": "shift+ctrl+enter",
        "when": "axcode.diffVisible"
      },
      {
        "command": "axcode.rejectDiff",
        "mac": "shift+cmd+backspace",
        "key": "shift+ctrl+backspace",
        "when": "axcode.diffVisible"
      },
      {
        "command": "axcode.rejectDiff",
        "mac": "cmd+z",
        "key": "ctrl+z",
        "when": "axcode.diffVisible"
      },
      {
        "command": "axcode.quickEditHistoryUp",
        "mac": "up",
        "key": "up",
        "when": "false && axcode.quickEditHistoryFocused"
      },
      {
        "command": "axcode.quickEditHistoryDown",
        "mac": "down",
        "key": "down",
        "when": "false && axcode.quickEditHistoryFocused"
      },
      {
        "command": "axcode.acceptVerticalDiffBlock",
        "mac": "alt+cmd+y",
        "key": "alt+ctrl+y"
      },
      {
        "command": "axcode.rejectVerticalDiffBlock",
        "mac": "alt+cmd+n",
        "key": "alt+ctrl+n"
      },
      {
        "command": "axcode.focusEdit",
        "title": "Edit code with natural language",
        "mac": "cmd+i",
        "key": "ctrl+i"
      },
      {
        "command": "axcode.exitEditMode",
        "mac": "escape",
        "key": "escape",
        "when": "axcode.inEditMode && editorFocus"
      },
      {
        "command": "axcode.debugTerminal",
        "mac": "cmd+shift+r",
        "key": "ctrl+shift+r"
      },
      {
        "command": "axcode.toggleFullScreen",
        "mac": "cmd+k cmd+m",
        "key": "ctrl+k ctrl+m",
        "when": "!terminalFocus"
      },
      {
        "command": "axcode.toggleTabAutocompleteEnabled",
        "mac": "cmd+k cmd+a",
        "key": "ctrl+k ctrl+a",
        "when": "!terminalFocus"
      },
      {
        "command": "axcode.forceAutocomplete",
        "key": "ctrl+alt+space",
        "mac": "cmd+alt+space",
        "when": "editorTextFocus && !editorHasSelection && !editorReadOnly && !inSnippetMode"
      },
      {
        "command": "axcode.applyCodeFromChat",
        "mac": "alt+a",
        "key": "alt+a"
      },
      {
        "command": "axcode.nextEditWindow.hideNextEditSuggestion",
        "key": "escape",
        "when": "editorTextFocus && nextEditWindowActive && !axcode.jumpDecorationVisible"
      },
      {
        "command": "axcode.nextEditWindow.acceptNextEditSuggestion",
        "key": "tab",
        "when": "editorTextFocus && nextEditWindowActive && !axcode.jumpDecorationVisible"
      },
      {
        "command": "axcode.acceptJump",
        "key": "tab",
        "when": "editorTextFocus && axcode.jumpDecorationVisible"
      },
      {
        "command": "axcode.rejectJump",
        "key": "escape",
        "when": "editorTextFocus && axcode.jumpDecorationVisible"
      }
    ],
    "submenus": [
      {
        "id": "axcode.continueSubMenu",
        "label": "axcode"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "axcode.focusContinueInput"
        },
        {
          "command": "axcode.focusContinueInputWithoutClear"
        },
        {
          "command": "axcode.debugTerminal"
        },
        {
          "command": "axcode.toggleFullScreen"
        },
        {
          "command": "axcode.newSession"
        },
        {
          "command": "axcode.enterEnterpriseLicenseKey"
        },
        {
          "command": "axcode.generateRule"
        }
      ],
      "editor/context": [
        {
          "submenu": "axcode.continueSubMenu",
          "group": "0_acontinue"
        }
      ],
      "editor/title/run": [
        {
          "command": "axcode.rejectDiff",
          "group": "axcode",
          "when": "axcode.streamingDiff"
        }
      ],
      "axcode.continueSubMenu": [
        {
          "command": "axcode.focusContinueInputWithoutClear",
          "group": "axcode",
          "when": "editorHasSelection"
        },
        {
          "command": "axcode.focusEdit",
          "group": "axcode",
          "when": "editorHasSelection && !editorReadonly"
        },
        {
          "command": "axcode.writeCommentsForCode",
          "group": "axcode",
          "when": "editorHasSelection && !editorReadonly"
        },
        {
          "command": "axcode.writeDocstringForCode",
          "group": "axcode",
          "when": "editorHasSelection && !editorReadonly"
        },
        {
          "command": "axcode.fixCode",
          "group": "axcode",
          "when": "editorHasSelection && !editorReadonly"
        },
        {
          "command": "axcode.optimizeCode",
          "group": "axcode",
          "when": "editorHasSelection && !editorReadonly"
        },
        {
          "command": "axcode.fixGrammar",
          "group": "axcode",
          "when": "editorHasSelection && editorLangId == 'markdown' && !editorReadonly"
        }
      ],
      "explorer/context": [
        {
          "command": "axcode.selectFilesAsContext",
          "group": "1_debug@1"
        }
      ],
      "view/title": [
        {
          "command": "axcode.newSession",
          "group": "navigation@1",
          "when": "view == axcode.continueGUIView"
        },
        {
          "command": "axcode.viewHistory",
          "group": "navigation@2",
          "when": "view == axcode.continueGUIView"
        },
        {
          "command": "axcode.openConfigPage",
          "group": "navigation@3",
          "when": "view == axcode.continueGUIView"
        },
        {
          "command": "axcode.toggleFullScreen",
          "group": "navigation@3",
          "when": "view == axcode.continueGUIView"
        },
        {
          "command": "axcode.openConfigPage",
          "group": "navigation@4",
          "when": "view == axcode.continueGUIView"
        },
        {
          "command": "axcode.clearConsole",
          "group": "navigation@1",
          "when": "view == axcode.continueConsoleView"
        }
      ],
      "editor/title": [
        {
          "command": "axcode.newSession",
          "group": "navigation@1",
          "when": "activeWebviewPanelId == axcode.axcodeGUIView"
        },
        {
          "command": "axcode.viewHistory",
          "group": "navigation@2",
          "when": "activeWebviewPanelId == axcode.axcodeGUIView"
        }
      ],
      "terminal/context": [
        {
          "command": "axcode.debugTerminal",
          "group": "navigation@top"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "skax",
          "title": "axcode",
          "icon": "media/sidebar-icon.png"
        }
      ],
      "panel": [
        {
          "id": "skaxConsole",
          "title": "axcode Console",
          "icon": "$(window)"
        }
      ]
    },
    "views": {
      "skax": [
        {
          "type": "webview",
          "id": "axcode.axcodeGUIView",
          "name": "axcode",
          "icon": "media/sidebar-icon.png",
          "visibility": "visible"
        }
      ],
      "skaxConsole": [
        {
          "type": "webview",
          "id": "axcode.skaxConsoleView",
          "name": "axcode Console",
          "icon": "$(window)",
          "visibility": "visible",
          "when": "config.axcode.enableConsole"
        }
      ]
    },
    "jsonValidation": [
      {
        "fileMatch": "**/.skax*/config.json",
        "url": "./config_schema.json"
      },
      {
        "fileMatch": ".skaxrc.json",
        "url": "./skax_rc_schema.json"
      },
      {
        "fileMatch": "**/config.yaml",
        "url": "./config-yaml-schema.json"
      }
    ]
  },
  "scripts": {
    "esbuild-base": "node scripts/esbuild.js",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "esbuild-notify": "npm run esbuild-base -- --sourcemap --notify",
    "esbuild:visualize": "esbuild-visualizer --metadata ./build/meta.json --filename ./build/stats.html --open",
    "tsc": "tsc -p ./",
    "tsc:check": "tsc -p ./ --noEmit",
    "tsc-watch": "tsc -watch -p ./",
    "rebuild": "electron-rebuild -v 19.1.8 node-pty",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint . --ext ts --fix",
    "test": "vitest run",
    "vitest": "vitest run",
    "write-build-timestamp": "node scripts/write-build-timestamp.js",
    "prepackage": "node scripts/prepackage.js",
    "package": "node scripts/package.js",
    "package-all": "node scripts/package-all.js",
    "package:pre-release": "node scripts/package.js --pre-release",
    "build:rust": "cargo-cp-artifact -ac sync sync.node -- cargo build --manifest-path ../../sync/Cargo.toml --message-format=json-render-diagnostics",
    "build-debug:rust": "npm run build:rust --",
    "build-release:rust": "npm run build:rust -- --release",
    "e2e:compile": "tsc -p ./tsconfig.e2e.json",
    "e2e:build": "npm --prefix ../../gui run build && npm run package",
    "e2e:create-storage": "mkdir -p ./e2e/storage",
    "e2e:get-chromedriver": "extest get-chromedriver --storage ./e2e/storage --code_version 1.95.0",
    "e2e:get-vscode": "extest get-vscode --storage ./e2e/storage --code_version 1.95.0",
    "e2e:sign-vscode": "codesign --entitlements entitlements.plist --deep --force -s - './e2e/storage/Visual Studio Code.app'",
    "e2e:copy-vsix": "chmod +x ./e2e/get-latest-vsix.sh && bash ./e2e/get-latest-vsix.sh",
    "e2e:install-vsix": "extest install-vsix -f ./e2e/vsix/axcode.vsix --extensions_dir ./e2e/.test-extensions --storage ./e2e/storage",
    "e2e:install-extensions": "extest install-from-marketplace ms-vscode-remote.remote-ssh --extensions_dir ./e2e/.test-extensions --storage ./e2e/storage && extest install-from-marketplace ms-vscode-remote.remote-containers --extensions_dir ./e2e/.test-extensions --storage ./e2e/storage && extest install-from-marketplace ms-vscode-remote.remote-wsl --extensions_dir ./e2e/.test-extensions --storage ./e2e/storage",
    "e2e:test": "NODE_ENV=e2e extest run-tests ${TEST_FILE:-'./e2e/_output/tests/*.test.js'} --code_settings settings.json --extensions_dir ./e2e/.test-extensions --storage ./e2e/storage",
    "e2e:clean": "rm -rf ./e2e/_output ./e2e/storage",
    "e2e:all": "npm run e2e:build && npm run e2e:compile && npm run e2e:create-storage && npm run e2e:get-chromedriver && npm run e2e:get-vscode && npm run e2e:sign-vscode && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test && npm run e2e:clean",
    "e2e:all-non-mac": "npm run e2e:build && npm run e2e:compile && npm run e2e:create-storage && npm run e2e:get-chromedriver && npm run e2e:get-vscode && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test && npm run e2e:clean",
    "e2e:recompile-extension": "npm run package && npm run e2e:compile && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test && npm run e2e:clean",
    "e2e:rebuild-gui": "rm -rf gui && cp -r ../../gui/dist gui && npm run package && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test && npm run e2e:clean",
    "e2e:quick": "npm run e2e:compile && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test && npm run e2e:clean",
    "e2e:ci:download": "npm run e2e:create-storage && npm run e2e:get-chromedriver && npm run e2e:get-vscode",
    "e2e:ci:run": "npm run e2e:compile && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue npm run e2e:test",
    "e2e:ci:run-yaml": "npm run e2e:compile && npm run e2e:copy-vsix && npm run e2e:install-vsix && npm run e2e:install-extensions && CONTINUE_GLOBAL_DIR=e2e/test-continue-yaml npm run e2e:test"
  },
  "devDependencies": {
    "@biomejs/biome": "1.6.4",
    "@nestjs/common": "^11.0.16",
    "@openapitools/openapi-generator-cli": "^2.20.0",
    "@types/chai": "^5.0.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/follow-redirects": "^1.14.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.12",
    "@types/react-dom": "^18.2.4",
    "@types/request": "^2.48.8",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "1.70",
    "@types/ws": "^8.5.4",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@vscode/vsce": "^2.22.0",
    "cargo-cp-artifact": "^0.1",
    "chai": "^4.5.0",
    "esbuild": "0.17.19",
    "esbuild-visualizer": "^0.6.0",
    "eslint": "^8.28.0",
    "json-schema-to-typescript": "^12.0.0",
    "ovsx": "^0.8.3",
    "rimraf": "^5.0.5",
    "typescript": "^5.6.3",
    "vite": "^4.5.14",
    "vscode-extension-tester": "^8.14.1"
  },
  "dependencies": {
    "@continuedev/config-types": "file:../../packages/config-types",
    "@continuedev/fetch": "file:../../packages/fetch",
    "@electron/rebuild": "^3.2.10",
    "@reduxjs/toolkit": "^1.9.3",
    "@sentry/node": "^10.11.0",
    "@vscode/ripgrep": "^1.15.14",
    "axios": "^1.2.5",
    "core": "file:../../core",
    "cors": "^2.8.5",
    "dbinfoz": "^0.14.0",
    "diff": "^7.0.0",
    "downshift": "^7.6.0",
    "esbuild": "0.17.19",
    "express": "^4.18.2",
    "fkill": "^8.1.0",
    "follow-redirects": "^1.15.4",
    "handlebars": "^4.7.8",
    "highlight.js": "^11.7.0",
    "highlightable": "^1.3.0-beta.0",
    "http-proxy": "^1.18.1",
    "http-proxy-agent": "^7.0.0",
    "http-proxy-middleware": "^2.0.9",
    "https-proxy-agent": "^7.0.2",
    "ignore": "^5.3.0",
    "jsdom": "^24.0.0",
    "lru-cache": "^11.0.2",
    "minisearch": "^7.0.0",
    "mocha": "^11.7.1",
    "monaco-editor": "^0.45.0",
    "monaco-vscode-textmate-theme-converter": "^0.1.7",
    "ncp": "^2.0.0",
    "node-fetch": "^3.3.2",
    "node-machine-id": "^1.1.12",
    "posthog-node": "^3.6.3",
    "react-markdown": "^8.0.7",
    "react-redux": "^8.0.5",
    "read-last-lines": "^1.8.0",
    "request": "^2.88.2",
    "socket.io-client": "^4.7.2",
    "strip-ansi": "^7.1.0",
    "svg-builder": "^2.0.0",
    "systeminformation": "^5.23.7",
    "tailwindcss": "^3.3.2",
    "undici": "^6.21.3",
    "uuid": "^9.0.1",
    "uuidv4": "^6.2.13",
    "vectordb": "^0.4.20",
    "vitest": "^3.1.4",
    "vscode-languageclient": "^8.0.2",
    "ws": "^8.13.0",
    "yarn": "^1.22.21"
  },
  "overrides": {
    "vitest": {
      "@types/node": "^16.18.119"
    }
  }
}
